# ============= Lanes ================

platform :android do
  desc "Runs all the unit tests"
  lane :test_project do
    gradle(task: "-q testDebugUnitTest")
  end

  desc "Build the project"
  lane :build_project do
    gradle(task: "-q build")
  end

  desc "Generate full code coverage report"
  lane :generate_coverage_report do
    gradle(task: "-q jacocoFullReport")
  end

  desc "Display a notification"
  lane :show_notification do
    # Only execute next instructions if not running on CI
    next unless !is_ci

    # Show notification
    notification(
      title: "AndroidAutomations",
      subtitle: "show_notification lane",
      message: "Completed",
    )
  end

  desc "Execute a shell script"
  lane :run_shell_script do
    SCRIPT_DIR = "../scripts/"
    sh SCRIPT_DIR + "echoHelloWorld.sh"
  end

  desc "Run lint on codebase"
  lane :lint do
    gradle(task: "-q ktlintCheck lintDebug")
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do
    gradle(task: "-q clean assembleRelease")
    crashlytics

    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    upload_to_play_store
  end

  desc "Assemble a new release APK"
  lane :assemble_release_apk do
    gradle(task: "-q clean assembleRelease")
    puts "APK generated at ./app/build/outputs/apk/release/"
  end
end

# ============= Utils ================
