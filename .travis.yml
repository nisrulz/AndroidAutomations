language: minimal
os: linux
dist: xenial

# --------------------------------- Travis ----------------------------------
notifications:
  email: false

# Don't run Travis if the branch name matches below pattern
branches:
  except:
    - /^docs\/.*/

git:
  depth: false
  quiet: true

# --------------------------------- ENV ----------------------------------
env:
  global:
    # for updates check developer.android.com/studio#downloads
    - ANDROID_SDK_TOOLS=commandlinetools-linux-6200805_latest.zip
    - ANDROID_SDK_VERS=29
    - ANDROID_BUILD_TOOLS_VERS=29.0.3

# --------------------------------- Install ----------------------------------
before_install:
  - openssl aes-256-cbc -K $encrypted_48536eba9c94_key -iv $encrypted_48536eba9c94_iv -in ./keystore/keystore.jks.enc -out ./keystore/keystore.jks -d
  # Set JAVA_HOME path
  - export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
  # Download and unzip Android SDK command line tools
  - wget -nv https://dl.google.com/android/repository/$ANDROID_SDK_TOOLS
  - unzip -q -n $ANDROID_SDK_TOOLS -d $HOME/sdk
  # Set SDK tools path variable and ANDROID_HOME
  - export PATH=$PATH:$HOME/sdk/tools/bin
  - export ANDROID_HOME=$HOME/sdk
  # Create empty cfg file to prevent sdkmanager warning message
  - mkdir -p $HOME/.android && touch $HOME/.android/repositories.cfg

install:
  - yes | "${ANDROID_HOME}/tools/bin/sdkmanager" --sdk_root=${ANDROID_HOME} "platforms;android-${ANDROID_SDK_VERS}" > /dev/null
  - yes | "${ANDROID_HOME}/tools/bin/sdkmanager" --sdk_root=${ANDROID_HOME} "build-tools;${ANDROID_BUILD_TOOLS_VERS}" > /dev/null

# --------------------------------- Cache ----------------------------------
before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -rf $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - .gradle
    - $HOME/.android/build-cache
    - $HOME/.m2/repository
    - $HOME/sdk

# --------------------------------- Script ----------------------------------
before_script:
  # Make scripts and gradlew executable
  - chmod +x gradlew
  - chmod +x ./travis/*
  # Setup signing config
  - echo "storePassword=$storePassword" >> ./keystore/keystore.properties
  - echo "keyAlias=$keyAlias" >> ./keystore/keystore.properties
  - echo "keyPassword=$keyPassword" >> ./keystore/keystore.properties
  # Setup gradle.properties
  - mkdir -p $HOME/.gradle
  - echo "org.gradle.daemon=false" >> $HOME/.gradle/gradle.properties
  - echo "org.gradle.console=plain" >> $HOME/.gradle/gradle.properties

script:
  # If the branch is pull request
  - 'if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then bash ./travis/run_on_pull_requests.sh; fi'
  # If the branch is master
  - 'if [ "$TRAVIS_BRANCH" == "master" ]; then bash ./travis/run_on_master.sh; fi'
  # If the branch is not a pull request
  - 'if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then bash ./travis/run_on_non_pull_requests.sh; fi'

# ------------------------ Deploy to Github Releases ------------------------
before_deploy:
  - cd app/build/outputs/apk/

deploy:
  provider: releases
  skip_cleanup: true
  overwrite: true
  api_key:
    secure: "fyhdiJMetWFs9PpLEHhfh7MnwOgfst2/JZLkgbgwxoQHNBrWIP2EEjigASooCaN3SDuH2iyQvnfbugo0/WxRNe1jxNIF+ouijhfL0xzJFxT7fGRslNIHMc0AjbOON5ZedXcBPswtSCqYsWbCe+sU+i7R9WZ9ysOor7oP+3OuovXSPkEh7vqAGDumB5O/E6+HeD3EPgYdbvpav4nv7n2MO03rOCMmzfIRTaIPVDsE+KlPh76uOwI6D0I8jmP9g+eTq/MRjcOJ2H/T3T/D4Q1JUeDzbKKBcfSrmEjoXB15d0oCfZM6c+ir6p1vveMNPqsD9sqOF0AkJ0wBgWAtjjJhw0JpQnh+Z+iusJtpY6u7P4WstXf169TGI6LkljLODG/89lgLEVqQ1f0wE3kl6Vl8197IezspI9YqNjcUUziDUKJuo932NKFBA8AjBJGJurR1yDz7TNFvlE3EK7moj5hV1EoG1WMw7Fcg3daOoQxRr7dRFshcTHNaGzMyL9sazPKtuvYk5x983m+JaBRn1HVkhV0p9QF3NyPjHbu3hAqu6167bxsnGGKsVkvPeGnLCqBh2e1S8JyRNe/e7sHIRE+VtZyQatChGETHgx1h3uxd2ls8EaMKNXhCo905HWRu0O9DV0XGCqfdgyxqbMv7h0J6WNiJ5DIxJCcfYe3GFSDPKTo="
  file_glob: true
  file: release/*
  on:
    repo: nisrulz/AndroidAutomations
    tags: true
